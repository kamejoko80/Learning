#!/usr/bin/python
# filename: batchRename.py

import os
import sys

def createDesignator(num, bits):
    return str(num).zfill(bits)

def number_generator(start_num = 0, bits = 4):
    start = []
    start.append(start_num)
    def inner():
        start[0] = start[0] + 1
        return createDesigntor(start[0], bits)
    return inner

def getDirFiles(dir_path):
    try:
        return os.listdir(dir_path)
    except OSError, e:
        print "No Such Diretory: %s, exit." % dir_path
        os._exit(1)

def batchrename(dir_name, prefix = "IMG_",
                generator_func = number_generator()):
    '''batch rename files

    rename files in the directory specified by dir_path to
    [prefix][designtor].[jpg, png, etc.],
    designator is generated by generator_func
    '''
    for filename in os.listdir(dir_path):
        old_filename = os.path.join(dir_path, filename)
        new_filename = prefix.upper() + generator_func()\
                               + '.' + getFileSuffix(filename)
        if os.path.isfile(old_filename) and (not os.exists(new_filename)):
            os.rename(old_filename, os.join(dir_path, new_filename))

def getFileSuffix(filename):
    split =  filename.split('.')
    if len(split) == 1:
        print "raise a ValueError here, the filename have no suffix"
        return None
    else:
        return split[-1]

def testGetFileSuffix():
    assert getFileSuffix('good.jpg.png') == 'png'
    assert getFileSuffix('good') is None
    print "testGetfileSuffix Passed."

def testNumberGenerator():
    geneNums = []
    generator = number_generator()
    for i in range(10):
        geneNums.append(generator())
    assert geneNums[0] == '0001'
    assert geneNums[1] == '0002'
    assert geneNums[9] == '0010'
    print 'testNumberGenerator Passed.'

if __name__ == '__main__':
    testGetFileSuffix()
    testNumberGenerator()

    # local spider
    dir_path = os.path.join(sys.argv[1])
    batchrename(dir_path, prefix = 'beauty_')

